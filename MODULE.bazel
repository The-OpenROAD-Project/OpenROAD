# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2025, Precision Innovations Inc.

module(
    name = "openroad",
)

bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_flex", version = "0.3.1")
bazel_dep(name = "rules_bison", version = "0.3.1")
bazel_dep(name = "rules_cc", version = "0.1.1")

# Not all boost libs are available at the latest version yet, so use a
# slightly older one that has all we need.
# When updating, note that boost.asio 1.87 is broken
#   * https://github.com/boostorg/asio/issues/442
#   * https://github.com/chriskohlhoff/asio/issues/1587
# Fixed upstream, but need to wait for a release (1.88.0 ?) where that landed.
BOOST_VERSION = "1.83.0"

bazel_dep(name = "boost.algorithm", version = BOOST_VERSION)
bazel_dep(name = "boost.asio", version = BOOST_VERSION)
bazel_dep(name = "boost.beast", version = BOOST_VERSION + ".bcr.1")
bazel_dep(name = "boost.bind", version = BOOST_VERSION)
bazel_dep(name = "boost.config", version = BOOST_VERSION)
bazel_dep(name = "boost.core", version = BOOST_VERSION)
bazel_dep(name = "boost.fusion", version = BOOST_VERSION)
bazel_dep(name = "boost.geometry", version = BOOST_VERSION + ".bcr.2")
bazel_dep(name = "boost.graph", version = BOOST_VERSION + ".bcr.2")
bazel_dep(name = "boost.heap", version = BOOST_VERSION)
bazel_dep(name = "boost.icl", version = BOOST_VERSION)
bazel_dep(name = "boost.json", version = BOOST_VERSION + ".bcr.2")
bazel_dep(name = "boost.lambda", version = BOOST_VERSION + ".bcr.2")
bazel_dep(name = "boost.multi_array", version = BOOST_VERSION + ".bcr.2")
bazel_dep(name = "boost.optional", version = BOOST_VERSION)
bazel_dep(name = "boost.phoenix", version = BOOST_VERSION)
bazel_dep(name = "boost.polygon", version = BOOST_VERSION + ".bcr.2")
bazel_dep(name = "boost.property_tree", version = BOOST_VERSION + ".bcr.2")
bazel_dep(name = "boost.spirit", version = BOOST_VERSION)
bazel_dep(name = "boost.stacktrace", version = BOOST_VERSION)
bazel_dep(name = "boost.thread", version = BOOST_VERSION)
bazel_dep(name = "cudd", version = "3.0.0")
bazel_dep(name = "eigen", version = "3.4.0.bcr.2")
bazel_dep(name = "or-tools", version = "9.12")
bazel_dep(name = "spdlog", version = "1.15.1")
bazel_dep(name = "tcmalloc", version = "0.0.0-20250331-43fcf6e")
bazel_dep(name = "zlib", version = "1.3.1.bcr.5")

bazel_dep(name = "googletest", version = "1.16.0", dev_dependency = True)

# Dependencies needed by one of the rules_hdl repos. Once they are on
# BCR, they should depend on their own version.
bazel_dep(name = "glpk", version = "5.0.bcr.3", repo_name = "org_gnu_glpk")

## Fix the compiler version and avoid any local compiler
bazel_dep(name = "toolchains_llvm", version = "1.3.0")

# Configure and register the toolchain.
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    llvm_version = "19.1.1",
)
use_repo(llvm, "llvm_toolchain")
# use_repo(llvm, "llvm_toolchain_llvm") # if you depend on specific tools in scripts

register_toolchains("@llvm_toolchain//:all")

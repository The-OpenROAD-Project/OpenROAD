/* Generated by Yosys 0.9 (git sha1 UNKNOWN, clang  -fPIC -Os) */

module AndAndOr(in1, in2, out);
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  input [3:0] in1;
  input [3:0] in2;
  output [3:0] out;
  wire temp;
  LOGIC0_X1 _4_ (
    .Z(_3_)
  );
  AndOr a (
    .in1(in1),
    .in2(in2),
    .out({ _2_, _1_, _0_, temp })
  );
  FourAnd b (
    .in1({ _3_, _3_, _3_, temp }),
    .in2(in1),
    .out(out)
  );
endmodule

module AndOr(in1, in2, out);
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  input [3:0] in1;
  input [3:0] in2;
  output [3:0] out;
  wire temp;
  LOGIC0_X1 _4_ (
    .Z(_3_)
  );
  FourAnd a (
    .in1(in1),
    .in2(in2),
    .out({ _2_, _1_, _0_, temp })
  );
  FourOr b (
    .in1({ _3_, _3_, _3_, temp }),
    .in2(in1),
    .out(out)
  );
endmodule

module Constants(clock, io_wide_bus, reduced, out);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  input clock;
  input [5:0] io_wide_bus;
  output [15:0] out;
  output reduced;
  NOR3_X1 _11_ (
    .A1(io_wide_bus[4]),
    .A2(io_wide_bus[3]),
    .A3(io_wide_bus[0]),
    .ZN(_01_)
  );
  NOR3_X1 _12_ (
    .A1(io_wide_bus[5]),
    .A2(io_wide_bus[2]),
    .A3(io_wide_bus[1]),
    .ZN(_02_)
  );
  NAND2_X1 _13_ (
    .A1(_01_),
    .A2(_02_),
    .ZN(_00_)
  );
  LOGIC1_X1 _14_ (
    .Z(_09_)
  );
  LOGIC0_X1 _15_ (
    .Z(_10_)
  );
  DFF_X1 _16_ (
    .CK(clock),
    .D(_00_),
    .Q(reduced),
    .QN(_03_)
  );
  AndAndOr deepEliminate (
    .in1({ reduced, io_wide_bus[2:0] }),
    .in2({ _10_, _09_, _09_, _10_ }),
    .out({ _08_, out[14:12] })
  );
  FourAnd dontEliminateMe (
    .in1({ reduced, io_wide_bus[2:0] }),
    .in2(io_wide_bus[5:2]),
    .out({ _06_, out[5:3] })
  );
  FourAnd eliminateMe (
    .in1({ io_wide_bus[2:0], reduced }),
    .in2({ _09_, _10_, _09_, _10_ }),
    .out({ _07_, out[2:0] })
  );
  FourAndNot eliminateMe2 (
    .in1({ reduced, io_wide_bus[2:0] }),
    .in2({ _09_, _09_, _09_, _10_ }),
    .out({ _04_, out[11:9] })
  );
  FourAnd eliminateMePartial (
    .in1({ io_wide_bus[2:0], reduced }),
    .in2({ _09_, _10_, io_wide_bus[1:0] }),
    .out({ _05_, out[8:6] })
  );
  assign out[15] = 1'h0;
endmodule

module FourAnd(in1, in2, out);
  input [3:0] in1;
  input [3:0] in2;
  output [3:0] out;
  AND2_X1 _0_ (
    .A1(in2[0]),
    .A2(in1[0]),
    .ZN(out[0])
  );
  AND2_X1 _1_ (
    .A1(in2[1]),
    .A2(in1[1]),
    .ZN(out[1])
  );
  AND2_X1 _2_ (
    .A1(in2[2]),
    .A2(in1[2]),
    .ZN(out[2])
  );
  AND2_X1 _3_ (
    .A1(in2[3]),
    .A2(in1[3]),
    .ZN(out[3])
  );
endmodule

module FourAndNot(in1, in2, out);
  input [3:0] in1;
  input [3:0] in2;
  output [3:0] out;
  NAND2_X1 _0_ (
    .A1(in2[2]),
    .A2(in1[2]),
    .ZN(out[2])
  );
  NAND2_X1 _1_ (
    .A1(in2[3]),
    .A2(in1[3]),
    .ZN(out[3])
  );
  NAND2_X1 _2_ (
    .A1(in2[0]),
    .A2(in1[0]),
    .ZN(out[0])
  );
  NAND2_X1 _3_ (
    .A1(in2[1]),
    .A2(in1[1]),
    .ZN(out[1])
  );
endmodule

module FourOr(in1, in2, out);
  input [3:0] in1;
  input [3:0] in2;
  output [3:0] out;
  OR2_X1 _0_ (
    .A1(in2[0]),
    .A2(in1[0]),
    .ZN(out[0])
  );
  OR2_X1 _1_ (
    .A1(in2[1]),
    .A2(in1[1]),
    .ZN(out[1])
  );
  OR2_X1 _2_ (
    .A1(in2[2]),
    .A2(in1[2]),
    .ZN(out[2])
  );
  OR2_X1 _3_ (
    .A1(in2[3]),
    .A2(in1[3]),
    .ZN(out[3])
  );
endmodule

diff --git a/include/openroad/OpenRoad.hh b/include/openroad/OpenRoad.hh
index 5026a61e..10fd7594 100755
--- a/include/openroad/OpenRoad.hh
+++ b/include/openroad/OpenRoad.hh
@@ -104,6 +104,9 @@ namespace antenna_checker {
 class AntennaChecker;
 }
 
+namespace tool {
+class Tool;
+}
 
 namespace ord {
 
@@ -134,6 +137,8 @@ public:
   psm::PDNSim* getPDNSim() { return pdnsim_; }
   grt::GlobalRouter* getFastRoute() { return fastRoute_; }
   antenna_checker::AntennaChecker *getAntennaChecker(){ return antennaChecker_; }
+  tool::Tool *getTool(){ return tool_; }
+
   // Return the bounding box of the db rows.
   odb::Rect getCore();
   // Return true if the command units have been initialized.
@@ -205,6 +210,7 @@ private:
 #endif
   replace::Replace *replace_;
   psm::PDNSim *pdnsim_; 
+  tool::Tool *tool_;
 
   std::set<Observer *> observers_;
 
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index a39167a0..e8b2a8b5 100755
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -32,7 +32,9 @@ set(OPENPHYSYN_HOME ${PROJECT_SOURCE_DIR}/src/OpenPhySyn)
 set(PDNSIM_HOME ${PROJECT_SOURCE_DIR}/src/PDNSim)
 set(ANTENNACHECKER_HOME ${PROJECT_SOURCE_DIR}/src/antennachecker)
 set(GUI_HOME ${PROJECT_SOURCE_DIR}/src/gui)
+set(TOOL_HOME ${OPENROAD_HOME}/src/tool)
 
+set(OPENROAD_WRAP ${CMAKE_CURRENT_BINARY_DIR}/OpenRoad_wrap.cc)
 set(OPENROAD_TCL_INIT ${CMAKE_CURRENT_BINARY_DIR}/OpenRoadTclInitVar.cc)
 
 set(OPENROAD_SOURCE
@@ -235,6 +237,7 @@ if(BUILD_OPENPHYSYN)
   add_subdirectory(OpenPhySyn)
 endif()
 add_subdirectory(gui)
+add_subdirectory(tool)
 
 ################################################################
 
@@ -272,6 +275,8 @@ target_include_directories(openroad
   ${OPENRCX_HOME}/include
   ${PDNSIM_HOME}/include
   ${ANTENNACHECKER_HOME}/include
+  ${TOOL_HOME}/include
+
   ${TCL_INCLUDE_PATH}
   ${Boost_INCLUDE_DIRS}
   )
@@ -297,6 +302,7 @@ target_link_libraries(openroad
   ParquetFP
   ABKCommon
   pdnsim
+  tool
   zlib
   tm
   defin
diff --git a/src/OpenRoad.cc b/src/OpenRoad.cc
index 622aa11e..fff8e1a9 100755
--- a/src/OpenRoad.cc
+++ b/src/OpenRoad.cc
@@ -70,6 +70,8 @@
   #include "OpenPhySyn/MakeOpenPhySyn.hpp"
 #endif
 
+#include "tool/MakeTool.hh"
+
 namespace sta {
 extern const char *openroad_tcl_inits[];
 }
@@ -197,6 +199,7 @@ OpenRoad::init(Tcl_Interp *tcl_interp)
 #ifdef BUILD_OPENPHYSYN
   psn_ = makePsn();
 #endif
+  tool_ = makeTool();
 
   // Init components.
   Openroad_Init(tcl_interp);
@@ -222,6 +225,7 @@ OpenRoad::init(Tcl_Interp *tcl_interp)
 #ifdef BUILD_OPENPHYSYN
     initPsn(this);
 #endif
+  initTool(this);
 
   // Import exported commands to global namespace.
   Tcl_Eval(tcl_interp, "sta::define_sta_cmds");
diff --git a/src/tool/.gitignore b/src/tool/.gitignore
new file mode 100644
index 00000000..f820cf94
--- /dev/null
+++ b/src/tool/.gitignore
@@ -0,0 +1 @@
+test/results
diff --git a/src/tool/CMakeLists.txt b/src/tool/CMakeLists.txt
new file mode 100644
index 00000000..9fe88f75
--- /dev/null
+++ b/src/tool/CMakeLists.txt
@@ -0,0 +1,17 @@
+# Copyright (c) 2020, The Regents of the University of California
+# All rights reserved.
+# 
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+# 
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <https://www.gnu.org/licenses/>.
+
+add_subdirectory(src)
diff --git a/src/tool/include/tool/MakeTool.hh b/src/tool/include/tool/MakeTool.hh
new file mode 100644
index 00000000..d8e4b6dc
--- /dev/null
+++ b/src/tool/include/tool/MakeTool.hh
@@ -0,0 +1,38 @@
+// Copyright (c) 2020, The Regents of the University of California
+// All rights reserved.
+//
+// This program is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+// 
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+// 
+// You should have received a copy of the GNU General Public License
+// along with this program.  If not, see <https://www.gnu.org/licenses/>.
+
+#ifndef MAKE_TOOL_H
+#define MAKE_TOOL_H
+
+namespace tool {
+class Tool;
+}
+
+namespace ord {
+
+class OpenRoad;
+
+tool::Tool *
+makeTool();
+
+void
+deleteTool(tool::Tool *tool);
+
+void
+initTool(OpenRoad *openroad);
+
+} // namespace
+#endif
diff --git a/src/tool/include/tool/Tool.hh b/src/tool/include/tool/Tool.hh
new file mode 100644
index 00000000..3aa04be5
--- /dev/null
+++ b/src/tool/include/tool/Tool.hh
@@ -0,0 +1,39 @@
+// Copyright (c) 2020, The Regents of the University of California
+// All rights reserved.
+// 
+// This program is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+// 
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+// 
+// You should have received a copy of the GNU General Public License
+// along with this program.  If not, see <https://www.gnu.org/licenses/>.
+
+#include <tcl.h>
+#include "opendb/db.h"
+
+namespace tool {
+
+class Tool
+{
+public:
+  Tool();
+  ~Tool();
+  void init(Tcl_Interp *tcl_interp,
+	    odb::dbDatabase *db);
+  void toolize(const char *pos_arg1);
+  void setParam1(double param1);
+  void setFlag1(bool flag1);
+
+private:
+  odb::dbDatabase *db_;
+  double param1_;
+  bool flag1_;
+};
+
+}
diff --git a/src/tool/src/CMakeLists.txt b/src/tool/src/CMakeLists.txt
new file mode 100644
index 00000000..dccb8cf4
--- /dev/null
+++ b/src/tool/src/CMakeLists.txt
@@ -0,0 +1,46 @@
+# Copyright (c) 2020, The Regents of the University of California
+# All rights reserved.
+# 
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+# 
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <https://www.gnu.org/licenses/>.
+
+set(TOOL_WRAP ${CMAKE_CURRENT_BINARY_DIR}/Tool_wrap.cc)
+set(TOOL_TCL_INIT ${CMAKE_CURRENT_BINARY_DIR}/ToolTclInitVar.cc)
+
+add_custom_command(OUTPUT ${TOOL_WRAP}
+  COMMAND ${SWIG_EXECUTABLE} -tcl8 -c++ -namespace -prefix tool -I${OPENROAD_HOME}/include -o ${TOOL_WRAP} ${TOOL_HOME}/src/Tool.i
+  COMMAND ${OPENSTA_HOME}/etc/SwigCleanup.tcl ${CMAKE_CURRENT_BINARY_DIR}/Tool_wrap.cc
+  WORKING_DIRECTORY ${TOOL_HOME}/src
+  DEPENDS ${TOOL_HOME}/src/Tool.i
+  )
+
+add_custom_command(OUTPUT ${TOOL_TCL_INIT}
+  COMMAND ${OPENSTA_HOME}/etc/TclEncode.tcl ${TOOL_TCL_INIT} tool_tcl_inits Tool.tcl
+  WORKING_DIRECTORY ${TOOL_HOME}/src
+  DEPENDS Tool.tcl ${OPENSTA_HOME}/etc/TclEncode.tcl
+  )
+
+add_library(tool
+  MakeTool.cc
+  Tool.cc
+  ${TOOL_WRAP}
+  ${TOOL_TCL_INIT}
+  )
+
+target_include_directories(tool
+  PUBLIC ${TOOL_HOME}/include
+  PRIVATE
+  ${OPENROAD_HOME}/include
+  ${OPENDB_HOME}/include
+  ${OPENSTA_HOME}/include
+  )
diff --git a/src/tool/src/MakeTool.cc b/src/tool/src/MakeTool.cc
new file mode 100644
index 00000000..637332c8
--- /dev/null
+++ b/src/tool/src/MakeTool.cc
@@ -0,0 +1,42 @@
+// Copyright (c) 2020, The Regents of the University of California
+// All rights reserved.
+// 
+// This program is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+// 
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+// 
+// You should have received a copy of the GNU General Public License
+// along with this program.  If not, see <https://www.gnu.org/licenses/>.
+
+#include "openroad/OpenRoad.hh"
+#include "tool/Tool.hh"
+#include "tool/MakeTool.hh"
+
+namespace ord {
+
+tool::Tool *
+makeTool()
+{
+  return new tool::Tool;
+}
+
+void
+deleteTool(tool::Tool *tool)
+{
+  delete tool;
+}
+
+void
+initTool(OpenRoad *openroad)
+{
+  openroad->getTool()->init(openroad->tclInterp(),
+			    openroad->getDb());
+}
+
+}
diff --git a/src/tool/src/Tool.cc b/src/tool/src/Tool.cc
new file mode 100644
index 00000000..251003c3
--- /dev/null
+++ b/src/tool/src/Tool.cc
@@ -0,0 +1,73 @@
+// Copyright (c) 2020, The Regents of the University of California
+// All rights reserved.
+// 
+// This program is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+// 
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+// 
+// You should have received a copy of the GNU General Public License
+// along with this program.  If not, see <https://www.gnu.org/licenses/>.
+
+#include "tool/Tool.hh"
+#include "sta/StaMain.hh"
+
+namespace sta {
+// Tcl files encoded into strings.
+extern const char *tool_tcl_inits[];
+}
+
+namespace tool {
+
+extern "C" {
+extern int Tool_Init(Tcl_Interp *interp);
+}
+
+Tool::Tool() :
+  param1_(0.0),
+  flag1_(false)
+{
+}
+
+Tool::~Tool()
+{
+}
+
+void
+Tool::init(Tcl_Interp *tcl_interp,
+	   odb::dbDatabase *db)
+{
+  db_ = db;
+
+  // Define swig TCL commands.
+  Tool_Init(tcl_interp);
+  // Eval encoded sta TCL sources.
+  sta::evalTclInit(tcl_interp, sta::tool_tcl_inits);
+}
+
+void
+Tool::toolize(const char *pos_arg1)
+{
+  printf("Gotta pos_arg1 %s\n", pos_arg1);
+  printf("Gotta param1 %f\n", param1_);
+  printf("Gotta flag1 %s\n", flag1_ ? "true" : "false");
+}
+
+void
+Tool::setParam1(double param1)
+{
+  param1_ = param1;
+}
+
+void
+Tool::setFlag1(bool flag1)
+{
+  flag1_ = flag1;
+}
+
+}
diff --git a/src/tool/src/Tool.i b/src/tool/src/Tool.i
new file mode 100644
index 00000000..cc67558b
--- /dev/null
+++ b/src/tool/src/Tool.i
@@ -0,0 +1,52 @@
+// Copyright (c) 2020, The Regents of the University of California
+// All rights reserved.
+// 
+// This program is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+// 
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+// 
+// You should have received a copy of the GNU General Public License
+// along with this program.  If not, see <https://www.gnu.org/licenses/>.
+
+%module tool
+
+%{
+
+#include "tool/Tool.hh"
+#include "openroad/OpenRoad.hh"
+
+tool::Tool *
+getTool()
+{
+  return ord::OpenRoad::openRoad()->getTool();
+}
+
+%}
+
+%inline %{
+
+void
+tool_set_param1(double param1)
+{
+  getTool()->setParam1(param1);
+}
+
+void
+tool_set_flag1(bool flag1)
+{
+  getTool()->setFlag1(flag1);
+}
+
+void
+toolize(const char *pos_arg1)
+{
+  getTool()->toolize(pos_arg1);
+}
+
+%} // inline
diff --git a/src/tool/src/Tool.tcl b/src/tool/src/Tool.tcl
new file mode 100644
index 00000000..9ef81cb1
--- /dev/null
+++ b/src/tool/src/Tool.tcl
@@ -0,0 +1,48 @@
+# Copyright (c) 2020, The Regents of the University of California
+# All rights reserved.
+# 
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+# 
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <https://www.gnu.org/licenses/>.
+
+sta::define_cmd_args "run_tool" {[-key1 key1] [-flag1] pos_arg1}
+
+# Put helper functions in a separate namespace so they are not visible
+# too users in the global namespace.
+namespace eval tool {
+
+proc tool_helper { } {
+  puts "Helping 23/6"
+}
+
+}
+
+# Example usage:
+#  toolize foo
+#  toolize -flag1 -key1 2.0 bar
+#  help toolize
+proc toolize { args } {
+  sta::parse_key_args "toolize" args \
+    keys {-key1} flags {-flag1}
+
+  if { [info exists keys(-key1)] } {
+    set param1 $keys(-key1)
+    sta::check_positive_float "-key1" $param1
+    tool::tool_set_param1 $param1
+  }
+
+  tool::tool_set_flag1 [info exists flags(-flag1)]
+
+  sta::check_argc_eq1 "toolize" $args
+  tool::tool_helper
+  tool::toolize [lindex $args 0]
+}
diff --git a/src/tool/test/regression b/src/tool/test/regression
new file mode 100755
index 00000000..1303225f
--- /dev/null
+++ b/src/tool/test/regression
@@ -0,0 +1,36 @@
+#!/bin/sh
+# The next line is executed by /bin/sh, but not Tcl \
+exec tclsh $0 ${1+"$@"}
+
+# Copyright (c) 2020, The Regents of the University of California
+# All rights reserved.
+#
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+# 
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <https://www.gnu.org/licenses/>.
+
+# Usage: regression [test1 [test2...]]
+# Where test1 is all or the name of a tcl script in /test
+# Wildcard matching with '*' and '?' in test names is supported.
+
+# Directory containing tests.
+set test_dir [file dirname [file normalize [info script]]]
+set openroad_dir [file dirname [file dirname [file dirname $test_dir]]]
+
+source [file join $openroad_dir "test" "regression.tcl"]
+source [file join $test_dir "regression_tests.tcl"]
+
+regression_main
+
+# Local Variables:
+# mode:tcl
+# End:
diff --git a/src/tool/test/regression.tcl b/src/tool/test/regression.tcl
new file mode 120000
index 00000000..58d7f3fa
--- /dev/null
+++ b/src/tool/test/regression.tcl
@@ -0,0 +1 @@
+../../../test/regression.tcl
\ No newline at end of file
diff --git a/src/tool/test/regression_tests.tcl b/src/tool/test/regression_tests.tcl
new file mode 100644
index 00000000..775d384b
--- /dev/null
+++ b/src/tool/test/regression_tests.tcl
@@ -0,0 +1,3 @@
+record_tests {
+  toolize1
+}
diff --git a/src/tool/test/save_ok b/src/tool/test/save_ok
new file mode 100644
index 00000000..19e9de4b
--- /dev/null
+++ b/src/tool/test/save_ok
@@ -0,0 +1,34 @@
+#!/bin/sh
+# The next line is executed by /bin/sh, but not Tcl \
+exec tclsh $0 ${1+"$@"}
+
+# Copyright (c) 2020, The Regents of the University of California
+# All rights reserved.
+# 
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+# 
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <https://www.gnu.org/licenses/>.
+
+# Usage: save_ok | test1 [test2...] | failures
+
+# Directory containing tests.
+set test_dir [file dirname [file normalize [info script]]]
+set openroad_dir [file dirname [file dirname [file dirname $test_dir]]]
+
+source [file join $test_dir "regression_vars.tcl"]
+source [file join $openroad_dir "test" "regression.tcl"]
+
+save_ok_main
+
+# Local Variables:
+# mode:tcl
+# End:
diff --git a/src/tool/test/toolize1.ok b/src/tool/test/toolize1.ok
new file mode 100644
index 00000000..05857f02
--- /dev/null
+++ b/src/tool/test/toolize1.ok
@@ -0,0 +1,4 @@
+Helping 23/6
+Gotta pos_arg1 frob
+Gotta param1 22.000000
+Gotta flag1 true
diff --git a/src/tool/test/toolize1.tcl b/src/tool/test/toolize1.tcl
new file mode 100644
index 00000000..815688f9
--- /dev/null
+++ b/src/tool/test/toolize1.tcl
@@ -0,0 +1 @@
+toolize -flag1 -key1 22 frob

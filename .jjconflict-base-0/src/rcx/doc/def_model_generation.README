// SPDX-License-Identifier: BSD-3-Clause
// Copyright (c) 2024-2025, The OpenROAD Authors

# Author: Dimitris K. Fotakis
# Doc Version: v1.0
# Date: 11/05/2024


# Model Generation Flow for rcx 

This flow generates the model file for rcx. 
rcx Model file contains modeling for Resistance and Capacitance Extraction of wires 
and Resistance Extraction for Vias.
The model file is generated once per process technology and  includes models for multiple process corners.


# flow Steps

# ---------------------------------------------------------------------------
# A. Generate layout patterns

  	- Description: 
		rcx generates many wire and via patterns to model various types 
		of capacitance and resistance geometric configurations.

  	- Input: tech LEF (layers, default vias)
  	- Output: patterns.def, patterns.v
  	- Sample Script: 
			read_lef lef
			bench_wires -len 20 -all
			write_def  patterns.DEF
			bench_verilog patterns.v

  		Example: rcx/test/rcx_v2/model/scripts/v1_patterns.tcl

# ---------------------------------------------------------------------------
# B. Run Reference extractor

  	- Description: 
		Generate SPEF files for the layout patterns generated by rcx using a reference
    		extractor, one SPEF per process corner
    		
  	- Input: patterns.def, patterns.v (if required), and additional files required by reference extractor
  	- Output: patterns.spef
  	- Script: Different per reference extractor used

# ---------------------------------------------------------------------------
# C. Generate Model File

  	- Description: 
		Generate Custom model file to be used for every chip extraction.
	 	rcx reads technology LEF file, DEF file with the layout patterns and one SPEF per corner 
		and generate a single model file for all corners

  	- Input: Tech LEF, Layout Patterns DEF, one SPEF file per corner
  	- Output: model file
  	- Sample Script: 
			set spef1 patterns.MAX.spef
			set spef2 patterns.TYP.spef
			set spef3 patterns.MIN.spef

			read_lef $lef
			read_def $def

			gen_rcx_model -out_file 3corners.rcx.model -corner_list "MAX TYP MIN"  -spef_file_list "$spef1 $spef2 $spef3"

  		Example: TODO



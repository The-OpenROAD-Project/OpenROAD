common --enable_bzlmod
common --enable_workspace  # explicitly currently still needing this

# suppress distracting warning about newer module
# versions found in dependency graph.
common --check_direct_dependencies=off

# Test timeouts for various levels.
test --test_timeout=300,1800,1800,9600

# bazel 7 is somewhat forgiving for glob patterns that don't
# match, but bazel 8 will be strict. So start now.
common --incompatible_disallow_empty_glob

build --cxxopt "-std=c++17"        --host_cxxopt "-std=c++17"
build --cxxopt "-xc++"             --host_cxxopt "-xc++"
build --cxxopt "-ffp-contract=off" --host_cxxopt "-ffp-contract=off"

# allow exceptions.
build  --cxxopt=-fexceptions    --host_cxxopt=-fexceptions

# Turn warnings on...
build --copt "-Wall"               --host_copt "-Wall"
build --copt "-Wextra"             --host_copt "-Wextra"

# ... and disable the warnings we're not interested in.
build --copt "-Wno-sign-compare"          --host_copt "-Wno-sign-compare"
build --copt "-Wno-unused-parameter"      --host_copt "-Wno-unused-parameter"
build --copt "-Wno-c++20-designator"      --host_copt "-Wno-c++20-designator"
build --copt "-Wno-gcc-compat"            --host_copt "-Wno-gcc-compat"
build --copt "-Wno-nullability-extension" --host_copt "-Wno-nullability-extension"

# The warning acceptance bar in CI for PRs is set by -Werror of a specific
# version of some chosen compiler. Disable warnings from other compilers until
# they are fixed and under CI -Werror acceptance critera as there is nothing the
# developers can(they can't be reproduced locally or in CI) or should do about
# these warnings in code they are not working on.
build --copt "-Wno-unused-private-field"  --host_copt "-Wno-unused-private-field"
build --copt "-Wno-cast-function-type-mismatch"  --host_copt "-Wno-cast-function-type-mismatch"
build --copt "-Wno-unused-but-set-variable"  --host_copt "-Wno-unused-but-set-variable"

# For 3rd party code: Disable warnings entirely.
# They are not actionable and just create noise.
build --per_file_copt=external/.*@-w
build --host_per_file_copt=external/.*@-w

# Settings for --config=asan address sanitizer build
build:asan --strip=never
build:asan --copt -fsanitize=address
build:asan --copt -DADDRESS_SANITIZER
build:asan --copt -O1
build:asan --copt -g
build:asan --copt -fno-omit-frame-pointer
build:asan --linkopt -fsanitize=address

# Flags with enough debug symbols to get useful outputs with Linux `perf`
build:profile --strip=never
build:profile --copt -g
build:profile --copt -gmlt
build:profile --copt -fno-omit-frame-pointer

# TODO: document
build --incompatible_strict_action_env

# TODO: setup a new cache for OpenROAD
# Read only remote cache, updated by OpenROAD team members and CI.
#build --remote_cache=https://storage.googleapis.com/megaboom-bazel-artifacts
#build --remote_cache_compression=true

try-import %workspace%/user.bazelrc

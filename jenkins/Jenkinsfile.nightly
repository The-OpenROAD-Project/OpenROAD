// pipeline {
//   agent any;
//   options {
//     timeout(time: 9, unit: 'HOURS')
//   }
//   environment {
//     COMMIT_AUTHOR_EMAIL = sh (returnStdout: true, script: "git --no-pager show -s --format='%ae'").trim();
//     EQUIVALENCE_CHECK = 1;
//   }
//   stages {
//     stage("Build") {
//       steps {
//         sh "./etc/Build.sh -no-warnings";
//         stash name: "build", includes: "build/**";
//       }
//     }

//     stage('Test Matrix') {
//       matrix {
//         agent any;
//         axes {
//           axis {
//             name 'ISPD_YEAR';
//             values '18', '19';
//           }
//           axis {
//             name 'TEST_TO_RUN';
//             values '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'GPL';
//           }
//         }
//         excludes {
//           // run GPL test only once
//           exclude {
//             axis {
//               name 'ISPD_YEAR';
//               values '19';
//             }
//             axis {
//               name 'TEST_TO_RUN';
//               values 'GPL';
//             }
//           }
//         }
//         stages {
//           stage('Run Tests') {
//             steps {
//               script {

//                 if (env.TEST_TO_RUN != "GPL") {
//                   stage("ISPD ${ISPD_YEAR} TEST ${TEST_TO_RUN}") {
//                     unstash "build";
//                     sh "python3 src/drt/test/run-ispd.py --program $WORKSPACE/build/src/openroad --tests ispd${ISPD_YEAR}_test${TEST_TO_RUN}";
//                   }
//                 }

//                 if (env.TEST_TO_RUN == "GPL") {
//                   stage("GPL Tests") {
//                     unstash "build";
//                     sh "./src/gpl/test/regression-large";
//                   }
//                 }

//               }
//             }
//           }
//         }
//         post {
//           always {
//             archiveArtifacts "**/*.tar.gz, **/*.log";
//           }
//         }

//       }
//     }
//   }

//   post {
//     failure {
//       script {
//         emailext (
//             to: "$COMMIT_AUTHOR_EMAIL, \$DEFAULT_RECIPIENTS",
//             subject: '$DEFAULT_SUBJECT',
//             body: '$DEFAULT_CONTENT',
//             );
//       }
//     }
//   }
// }
@Library('utils@main') _

node {
  def COMMIT_AUTHOR_EMAIL = sh (returnStdout: true, script: "git --no-pager show -s --format='%ae'").trim();
  def EQUIVALENCE_CHECK = 1;

  stage('Checkout'){
    checkout scm
  }

  try {
    timeout(time: 9, unit: 'HOURS') {
      stage("Build") {
        sh "./etc/Build.sh -no-warnings";
        stash name: "build", includes: "build/**";
      }

      stage('Test Matrix') {
        Map matrix_axes = [
        ISPD_YEAR: ['18', '19'],
        TEST_TO_RUN: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'GPL']
        ]

        Map tasks = [failFast: false]
        for (ispd_year in matrix_axes.ISPD_YEAR) {
          for (test_to_run in matrix_axes.TEST_TO_RUN) {
            if (!(ispd_year == '19' && test_to_run == 'GPL')) {
              if (test_to_run != "GPL") {
                tasks["ISPD ${ispd_year} TEST ${test_to_run}"] = {
                    node {
                      checkout scm
                      try {
                        unstash "build";
                        sh "python3 src/drt/test/run-ispd.py --program $WORKSPACE/build/src/openroad --tests ispd${ispd_year}_test${test_to_run}";
                      } finally {
                        archiveArtifacts "**/*.tar.gz, **/*.log";
                      }
                    }
                }
              }

              if (test_to_run == "GPL") {
                tasks["GPL Tests"] = {
                    node {
                      checkout scm
                      try {
                        unstash "build";
                        sh "./src/gpl/test/regression-large";
                      } finally {
                        archiveArtifacts "**/*.tar.gz, **/*.log";
                      }
                    }
                }
              }
              // tasks["ISPD${ispd_year}_TEST${test_to_run}"] = {
              //     node {
              //         checkout scm
              //         try {
              //           if (test_to_run != "GPL") {
              //             stage("ISPD ${ispd_year} TEST ${test_to_run}") {
              //               unstash "build";
              //               sh "python3 src/drt/test/run-ispd.py --program $WORKSPACE/build/src/openroad --tests ispd${ispd_year}_test${test_to_run}";
              //             }
              //           }

              //           if (test_to_run == "GPL") {
              //             stage("GPL Tests") {
              //               unstash "build";
              //               sh "./src/gpl/test/regression-large";
              //             }
              //           }
              //         } finally {
              //           archiveArtifacts "**/*.tar.gz, **/*.log";
              //         }
              //     }
              // }
            }
          }
        }

        parallel(tasks)
      }
    }

  } finally {
    catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
      def EMAIL_TO = emailDetails(env.BRANCH_NAME, COMMIT_AUTHOR_EMAIL)
      emailext (
            to: "$EMAIL_TO",
            subject: '$DEFAULT_SUBJECT',
            body: '$DEFAULT_CONTENT',
            );
    }
  }
}


